# Generated by Django 5.0.14 on 2025-07-18 20:56

import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
        ('wagtaildocs', '0012_uploadeddocument'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Atelier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duree', models.PositiveIntegerField(help_text='Durée en minutes')),
                ('consigne', models.TextField(blank=True, help_text='Consigne pédagogique')),
            ],
        ),
        migrations.CreateModel(
            name='FichePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date de la séance')),
                ('niveau', models.CharField(choices=[('enfant', 'Enfant'), ('adulte', 'Adulte'), ('mixte', 'Mixte')], default='enfant', help_text='Public cible', max_length=10)),
                ('participants', models.TextField(blank=True, help_text='Liste des participants')),
                ('animateurs', models.ManyToManyField(related_name='fiches_animateur', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FichePageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='fiches.fichepage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='fichepage',
            name='categories',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='fiches.FichePageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('type_sequence', models.CharField(choices=[('echauffement', 'Échauffement'), ('zuhe', 'Zuhe'), ('souplesse', 'Souplesse'), ('gongfang', 'Gong Fang'), ('taolu', 'Taolu'), ('autre', 'Autre')], max_length=50)),
                ('ateliers', models.ManyToManyField(blank=True, to='fiches.atelier')),
            ],
        ),
        migrations.AddField(
            model_name='fichepage',
            name='sequences',
            field=models.ManyToManyField(blank=True, to='fiches.sequence'),
        ),
        migrations.CreateModel(
            name='Technique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Nom romanisé ex: Ma Bu', max_length=100)),
                ('nom_chinois', models.CharField(blank=True, help_text='Idéogramme ou nom en chinois', max_length=50)),
                ('nom_pinyin', models.CharField(blank=True, help_text='Transcription en pinyin ex: Mǎ bù', max_length=100)),
                ('traduction', models.CharField(blank=True, help_text='Traduction littérale ou simplifiée', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Brève description ou usage pédagogique')),
                ('style', models.CharField(choices=[('shaolin', 'Shaolin'), ('changquan', 'Changquan'), ('nanquan', 'Nanquan'), ('autre', 'Autre')], default='autre', max_length=50)),
                ('zone', models.CharField(choices=[('corps entier', 'Corps entier'), ('main', 'Main'), ('pied', 'Pied'), ('autre', 'Autre')], default='corps entier', max_length=50)),
                ('categorie', models.CharField(choices=[('bufa', 'Bùfǎ (postures)'), ('tuifa', 'Tuīfǎ (coups de pied)'), ('shoufa', 'Shǒufǎ (techniques de main)'), ('jibengong', 'Jīběngōng (fondamentaux)'), ('autre', 'Autre')], default='autre', max_length=50)),
                ('video_embed', models.URLField(blank=True, help_text='Lien vers une vidéo YouTube ou Vimeo')),
                ('lien', models.URLField(blank=True, help_text='Lien complémentaire vers un article, etc.')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.document')),
            ],
        ),
        migrations.AddField(
            model_name='atelier',
            name='techniques',
            field=models.ManyToManyField(blank=True, to='fiches.technique'),
        ),
    ]
